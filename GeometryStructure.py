import numpy
# VERTICES = [
#     [-100, -100, -100],
#     [-100, 100, -100],
#     [-100, -100, 100],
#     [-100, 100, 100],
#     [100, -100, -100],
#     [100, 100, -100],
#     [100, -100, 100],
#     [100, 100, 100]
# ]

# EDGES =  [
#     [0, 1, 2, 4],
#     [3, 1, 2, 7],
#     [5, 1, 4, 7],
#     [6, 2, 4, 7]
# ]

# FACES = [
#     [1, 3, 7, 5, 1],
#     [0, 2, 6, 4, 0],
#     [2, 3, 1, 0, 2],
#     [3, 2, 6, 7, 3],
#     [7, 6, 4, 5, 7],
#     [5, 4, 0, 1, 5]
# ]
VERTICES = [
    [-125, -50, 100],
    [-125, 0, 100],
    [-75, 0, 100],
    [-75, 50, 100],
    [-25, 100, 100],
    [-25, 150, 100],
    [25, 150, 100],
    [25, 100, 100],
    [75, 50, 100],
    [75, 0, 100],
    [125, 0, 100],
    [125, -50, 100],
    [75, -50, 100],
    [25, -100, 100],
    [25, -150, 100],
    [-25, -150, 100],
    [-25, -100, 100],
    [-75, -50, 100],
    [-75, -50, -100],
    [-25, -100, -100],
    [-25, -150, -100],
    [25, -150, -100],
    [25, -100, -100],
    [75, -50, -100],
    [125, -50, -100],
    [125, 0, -100],
    [75, 0, -100],
    [75, 50, -100],
    [25, 100, -100],
    [25, 150, -100],
    [-25, 150, -100],
    [-25, 100, -100],
    [-75, 50, -100],
    [-75, 0, -100],
    [-125, 0, -100],
    [-125, -50, -100],
]

FACES = [
    [3, 2, 1, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4],
    [1, 2, 35, 36],
    [2, 3, 34, 35],
    [3, 4, 33, 34],
    [4, 5, 32, 33],
    [5, 6, 31, 32],
    [6, 7, 30, 31],
    [7, 8, 29, 30],
    [8, 9, 28, 29],
    [9, 10, 27, 28],
    [10, 11, 26, 27],
    [11, 12, 25, 26],
    [12, 13, 24, 25],
    [13, 14, 23, 24],
    [16, 17, 20, 21],
    [18, 1, 36, 19],
    [17, 18, 19, 20],
    [14, 15, 22, 23],
    [15, 16, 21, 22],
    [36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19],
]

class GeometryStructure():

    def __init__(self):
        self.vertices = VERTICES
        # self.edges = EDGES
        self.faces = FACES

    def get_faces_normal_vectors(self):
        ''' Calc normal vector for each face '''
        normal_vectors = []

        for face in FACES:
            a_vertice = self.vertices[face[0] - 1]
            b_vertice = self.vertices[face[1] - 1]
            c_vertice = self.vertices[face[2] - 1]

            first_vector = [b_vertice[i] - a_vertice[i]
                            for i in range(len(b_vertice))]
            second_vector = [c_vertice[i] - a_vertice[i]
                             for i in range(len(c_vertice))]

            normal_vectors.append(
                list(numpy.cross(first_vector, second_vector)))

        return normal_vectors
